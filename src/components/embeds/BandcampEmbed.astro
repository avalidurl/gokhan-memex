---
interface Props {
  url: string
  size?: 'large' | 'small'
  artwork?: 'small' | 'big'
  transparent?: boolean
}

const { 
  url, 
  size = 'large',
  artwork = 'small',
  transparent = true
} = Astro.props

// Check if URL is already a Bandcamp embed URL or extract info from regular URLs
function processBandcampUrl(url: string): { embedUrl: string, isValid: boolean } {
  try {
    // If URL is already a Bandcamp embed URL, use it directly
    if (url.includes('bandcamp.com/EmbeddedPlayer/')) {
      return { embedUrl: url, isValid: true }
    }
    
    // If it's a regular Bandcamp URL, try to extract info
    const urlObj = new URL(url)
    const pathParts = urlObj.pathname.split('/')
    
    let type: 'track' | 'album' | null = null
    let id: string | null = null
    
    if (pathParts.includes('track') && pathParts[pathParts.indexOf('track') + 1]) {
      type = 'track'
      id = pathParts[pathParts.indexOf('track') + 1]
    } else if (pathParts.includes('album') && pathParts[pathParts.indexOf('album') + 1]) {
      type = 'album' 
      id = pathParts[pathParts.indexOf('album') + 1]
    }
    
    if (type && id) {
      const embedUrl = `https://bandcamp.com/EmbeddedPlayer/${type}=${id}/size=${size}/bgcol=ffffff/linkcol=0687f5/artwork=${artwork}/transparent=${transparent}/`
      return { embedUrl, isValid: true }
    }
    
    return { embedUrl: '', isValid: false }
  } catch {
    return { embedUrl: '', isValid: false }
  }
}

const { embedUrl, isValid } = processBandcampUrl(url)
const uniqueId = `bandcamp-${Math.random().toString(36).substring(2, 11)}`
---

<div class="my-6 not-prose">
  {isValid ? (
    <div 
      class="bandcamp-lazy-container relative"
      data-src={embedUrl}
      data-id={uniqueId}
    >
      <!-- Loading Placeholder -->
      <div class="bandcamp-placeholder bg-gray-100 dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600 flex items-center justify-center transition-all duration-300" style="height: 120px;">
        <div class="text-center">
          <div class="animate-pulse mb-2">
            <div class="w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-lg mx-auto mb-2"></div>
            <div class="h-3 bg-gray-300 dark:bg-gray-600 rounded w-24 mx-auto mb-1"></div>
            <div class="h-2 bg-gray-300 dark:bg-gray-600 rounded w-16 mx-auto"></div>
          </div>
          <button 
            class="mt-3 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded-md transition-colors"
            onclick="this.parentElement.parentElement.parentElement.querySelector('.bandcamp-loader').click()"
          >
            Load Bandcamp Player
          </button>
        </div>
      </div>
      
      <!-- Hidden load trigger -->
      <button class="bandcamp-loader hidden" data-target={uniqueId}></button>
      
      <!-- Iframe container (initially hidden) -->
      <div class="bandcamp-iframe-container hidden">
        <!-- Iframe will be inserted here -->
      </div>
    </div>
  ) : (
    <div class="rounded-lg overflow-hidden border bg-card">
      <div class="p-6 text-center">
        <p class="text-muted-foreground mb-4">
          Unable to embed Bandcamp player
        </p>
        <a 
          href={url} 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
        >
          Listen on Bandcamp
        </a>
      </div>
    </div>
  )}
  
  <div class="mt-2 text-center">
    <a 
      href={url} 
      target="_blank" 
      rel="noopener noreferrer"
      class="text-xs text-muted-foreground hover:text-foreground transition-colors"
    >
      Open in Bandcamp â†—
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Intersection Observer for lazy loading
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          loadBandcampEmbed(entry.target);
          observer.unobserve(entry.target);
        }
      });
    }, {
      rootMargin: '50px' // Start loading 50px before the element comes into view
    });

    // Observe all Bandcamp containers
    document.querySelectorAll('.bandcamp-lazy-container').forEach(container => {
      observer.observe(container);
      
      // Also set up manual loading for the button
      const loader = container.querySelector('.bandcamp-loader');
      if (loader) {
        loader.addEventListener('click', () => {
          loadBandcampEmbed(container);
          observer.unobserve(container);
        });
      }
    });

    function loadBandcampEmbed(container: Element) {
      const src = (container as HTMLElement).dataset.src;
      const placeholder = container.querySelector('.bandcamp-placeholder');
      const iframeContainer = container.querySelector('.bandcamp-iframe-container');
      
      if (!src || !placeholder || !iframeContainer) return;

      // Create and insert iframe
      const iframe = document.createElement('iframe');
      iframe.style.cssText = 'border: 0; width: 100%; height: 120px;';
      iframe.src = src;
      iframe.setAttribute('seamless', 'true');
      iframe.title = 'Bandcamp Player';
      iframe.loading = 'eager'; // Load immediately once triggered
      
      // Show loading state
      placeholder.innerHTML = `
        <div class="text-center">
          <div class="animate-spin w-8 h-8 border-2 border-blue-500 border-t-transparent rounded-full mx-auto mb-2"></div>
          <div class="text-sm text-gray-600 dark:text-gray-400">Loading player...</div>
        </div>
      `;
      
      // Insert iframe
      iframeContainer.appendChild(iframe);
      
      // Handle iframe load
      iframe.onload = () => {
        placeholder.classList.add('hidden');
        iframeContainer.classList.remove('hidden');
      };
      
      // Fallback timeout
      setTimeout(() => {
        placeholder.classList.add('hidden');
        iframeContainer.classList.remove('hidden');
      }, 5000);
    }
  });
</script>