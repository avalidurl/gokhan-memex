---
interface Props {
  url: string
  tweetId?: string
  username?: string
  text?: string
}

const { url, tweetId, username, text } = Astro.props

// Extract tweet ID from URL if not provided
function extractTweetId(url: string) {
  try {
    const match = url.match(/twitter\.com\/\w+\/status\/(\d+)/) || url.match(/x\.com\/\w+\/status\/(\d+)/)
    return match ? match[1] : null
  } catch {
    return null
  }
}

const finalTweetId = tweetId || extractTweetId(url)
---

<div class="my-6 not-prose">
  <div class="rounded-lg border bg-card p-6">
    <div class="space-y-4">
      <!-- Header -->
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-semibold">Tweet</h3>
        <div class="text-xs text-muted-foreground bg-muted px-2 py-1 rounded">
          Twitter/X
        </div>
      </div>

      {text && (
        <blockquote class="text-sm border-l-4 border-primary pl-4 italic">
          "{text}"
        </blockquote>
      )}

      {username && (
        <p class="text-sm text-muted-foreground">by @{username}</p>
      )}

      <!-- Actions -->
      <div class="flex gap-3">
        <a
          href={url}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium"
        >
          View Tweet â†’
        </a>
        <a
          href={url}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 border border-input bg-background hover:bg-accent hover:text-accent-foreground rounded-md transition-colors text-sm"
        >
          Open in X/Twitter
        </a>
      </div>
    </div>
  </div>
</div>