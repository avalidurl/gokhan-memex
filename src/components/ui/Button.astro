---
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap font-serif transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "border border-foreground/15 bg-background text-foreground hover:bg-foreground/5 hover:border-foreground/25 font-medium text-sm tracking-wide",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-foreground/12 bg-background text-muted-foreground hover:bg-foreground/3 hover:text-foreground hover:border-foreground/20 font-medium text-sm tracking-wide",
        secondary:
          "border border-foreground/8 bg-muted/30 text-muted-foreground hover:bg-muted/50 hover:text-foreground font-medium text-sm tracking-wide",
        ghost: "hover:bg-foreground/5 text-muted-foreground hover:text-foreground font-medium text-sm tracking-wide",
        link: "text-foreground/70 hover:text-foreground underline-offset-4 hover:underline font-medium text-sm tracking-wide",
      },
      size: {
        default: "h-11 px-8 py-2",
        sm: "h-10 px-6",
        lg: "h-12 px-10",
        icon: "h-11 w-11",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface Props extends VariantProps<typeof buttonVariants> {
  class?: string
  id?: string
}

const { variant, size, class: className, ...props } = Astro.props
---

<button
  class={cn(buttonVariants({ variant, size, className }))}
  {...props}
>
  <slot />
</button>