---
import { getCollection } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Card from '@/components/ui/Card.astro'
import CardContent from '@/components/ui/CardContent.astro'
import Accordion from '@/components/ui/Accordion.astro'
import AccordionItem from '@/components/ui/AccordionItem.astro'
import AccordionTrigger from '@/components/ui/AccordionTrigger.astro'
import AccordionContent from '@/components/ui/AccordionContent.astro'
import Badge from '@/components/ui/Badge.astro'
import { formatDate } from '@/lib/utils'

const breadcrumbs: { label: string; href: string }[] = []

// Get all published blog posts for music category
const allPosts = (await getCollection('blog'))
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf())

const musicPosts = allPosts.filter(post => post.data.category === 'Music')

// Types for list items
type Person = {
  name: string
  url: string
  description: string
  category: string
}

// Curated lists organized by category
const lists = {
  people: [
    {
      name: "Simon Willison",
      description: "Web developer and writer focused on technology, AI, and programming",
      url: "https://simonwillison.net/",
      category: "Tech Writers"
    },
    {
      name: "qntm",
      description: "Writer known for fiction like 'There Is No Antimemetics Division' and technical writing",
      url: "https://qntm.org/",
      category: "Writers & Fiction"
    },
    {
      name: "Paul Graham",
      description: "Y Combinator founder and essayist known for influential startup and entrepreneurship advice",
      url: "https://www.paulgraham.com/",
      category: "Startup Advisors"
    },
    {
      name: "Sam Altman",
      description: "OpenAI CEO and tech leader with insights on artificial intelligence and technology's future",
      url: "https://blog.samaltman.com/",
      category: "AI Leaders"
    },
    {
      name: "Gwern Branwen",
      description: "Researcher and writer on AI, psychology, and statistics with deep technical analysis",
      url: "https://gwern.net/",
      category: "Researchers"
    },
    {
      name: "David Chapman",
      description: "Author exploring better ways of thinking about meaning, self, and society",
      url: "https://meaningness.com/",
      category: "Philosophers"
    },
    {
      name: "Nat Friedman",
      description: "Former GitHub CEO and tech entrepreneur, co-founder of Ximian and Xamarin",
      url: "https://nat.org",
      category: "Tech Leaders"
    },
    {
      name: "Patrick Collison",
      description: "Stripe co-founder and entrepreneur focused on financial technology and progress studies",
      url: "https://patrickcollison.com/",
      category: "Fintech Founders"
    }
  ] as Person[],
  books: [
    {
      title: "Conversations with Iannis Xenakis",
      author: "Bálint András Varga",
      description: "Insights into algorithmic composition and mathematical music",
      url: "https://www.amazon.com/Conversations-Iannis-Xenakis-Various-Varga/dp/0571179592",
      category: "Music & Art"
    }
  ]
}

---

<BaseLayout
  title="Lists"
  description="Curated lists of people, books, and music that inform my research across fintech, deep tech, and emerging technologies."
>
  <div class="container max-w-4xl mx-auto px-4 py-8">
    <Breadcrumbs items={breadcrumbs} currentPage="Lists" />

    <!-- Header -->
    <div class="mb-12">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight mb-4">Lists</h1>
      <p class="text-lg text-muted-foreground max-w-2xl">
        Curated collections of people, books, and music that inform my research and thinking across fintech, deep tech, and emerging technologies.
      </p>
    </div>

    <!-- Accordion Lists -->
    <div class="space-y-6">
      <Accordion class="w-full">
        <!-- People List -->
        <AccordionItem data-accordion-item class="border rounded-lg">
          <AccordionTrigger class="text-left">
            <div class="flex items-center justify-between w-full pr-4">
              <h2 class="text-xl font-semibold">People</h2>
              <Badge variant="secondary">{lists.people.length}</Badge>
            </div>
          </AccordionTrigger>
          <AccordionContent>
            <div class="grid gap-4">
              {lists.people.length === 0 && (
                <p class="text-sm text-muted-foreground italic text-center py-4">
                  People recommendations will be added here over time.
                </p>
              )}
              {lists.people.map(person => (
                <div class="flex items-start justify-between p-4 border rounded-lg hover:bg-accent/20 transition-colors">
                  <div class="flex-1">
                    <h3 class="font-semibold text-lg">
                      <a href={person.url} target="_blank" rel="noopener" class="hover:text-primary transition-colors">
                        {person.name}
                      </a>
                    </h3>
                    <p class="text-sm text-muted-foreground mt-1">{person.description}</p>
                    <Badge variant="outline" class="mt-2 text-xs">{person.category}</Badge>
                  </div>
                </div>
              ))}
            </div>
          </AccordionContent>
        </AccordionItem>

        <!-- Books List -->
        <AccordionItem data-accordion-item class="border rounded-lg">
          <AccordionTrigger class="text-left">
            <div class="flex items-center justify-between w-full pr-4">
              <h2 class="text-xl font-semibold">Books</h2>
              <Badge variant="secondary">{lists.books.length}</Badge>
            </div>
          </AccordionTrigger>
          <AccordionContent>
            <div class="grid gap-4">
              {lists.books.map(book => (
                <div class="flex items-start justify-between p-4 border rounded-lg hover:bg-accent/20 transition-colors">
                  <div class="flex-1">
                    <h3 class="font-semibold text-lg">
                      <a href={book.url} target="_blank" rel="noopener" class="hover:text-primary transition-colors">
                        {book.title}
                      </a>
                    </h3>
                    <p class="text-sm text-muted-foreground mt-1">by {book.author}</p>
                    <p class="text-sm text-muted-foreground mt-1">{book.description}</p>
                    <Badge variant="outline" class="mt-2 text-xs">{book.category}</Badge>
                  </div>
                </div>
              ))}
            </div>
          </AccordionContent>
        </AccordionItem>

        <!-- Music List -->
        <AccordionItem data-accordion-item class="border rounded-lg">
          <AccordionTrigger class="text-left">
            <div class="flex items-center justify-between w-full pr-4">
              <h2 class="text-xl font-semibold">Music</h2>
              <Badge variant="secondary">{musicPosts.length}</Badge>
            </div>
          </AccordionTrigger>
          <AccordionContent>
            <div class="space-y-4">
              <p class="text-sm text-muted-foreground mb-4">
                Music-related posts from my journal, exploring sound art, playlists, and musical concepts.
              </p>
              <div class="grid gap-3">
                {musicPosts.map(post => (
                  <div class="flex items-start justify-between p-3 border rounded-lg hover:bg-accent/20 transition-colors">
                    <div class="flex-1">
                      <h3 class="font-medium">
                        <a href={`/journal/${post.slug}`} class="hover:text-primary transition-colors">
                          {post.data.title}
                        </a>
                      </h3>
                      <p class="text-xs text-muted-foreground mt-1">
                        {formatDate(post.data.publishDate)}
                      </p>
                      {post.data.tags && (
                        <div class="flex gap-1 mt-2">
                          {post.data.tags.slice(0, 3).map(tag => (
                            <Badge variant="outline" class="text-xs">{tag}</Badge>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>
                ))}
                
                {musicPosts.length === 0 && (
                  <p class="text-sm text-muted-foreground italic text-center py-4">
                    Music posts will appear here after content migration.
                  </p>
                )}
              </div>
            </div>
          </AccordionContent>
        </AccordionItem>
      </Accordion>
    </div>

    <!-- Note -->
    <Card class="mt-8 bg-accent/20 border-accent">
      <CardContent class="p-6">
        <p class="text-sm text-muted-foreground">
          <strong>Note:</strong> These lists are continuously curated and updated. The music section will populate after content migration from the existing blog.
        </p>
      </CardContent>
    </Card>
  </div>
</BaseLayout>