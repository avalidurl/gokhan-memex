---
import { getCollection, type CollectionEntry } from 'astro:content'
import type { GetStaticPaths } from 'astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Card from '@/components/ui/Card.astro'
import CardContent from '@/components/ui/CardContent.astro'
import Badge from '@/components/ui/Badge.astro'
import { formatDate } from '@/lib/utils'

type PostEntry = CollectionEntry<'blog'>

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = (await getCollection('blog'))
    .filter((post: PostEntry) => !post.data.draft)

  // Get unique categories
  const categories = [...new Set(allPosts.map((post: PostEntry) => post.data.category))]
  
  return categories.map((category: string) => ({
    params: { 
      category: category.toLowerCase().replace(/\s+/g, '-').replace(/&/g, 'and')
    }
  }))
}

// Read from params and fetch data
const { category: categorySlug } = Astro.params as { category: string }

// Get all posts and find the original category name
const allPosts = (await getCollection('blog'))
  .filter((post: PostEntry) => !post.data.draft)

// Find the actual category name from slug
const categoryMap = new Map<string, string>()
allPosts.forEach((post: PostEntry) => {
  const slug = post.data.category.toLowerCase().replace(/\s+/g, '-').replace(/&/g, 'and')
  categoryMap.set(slug, post.data.category)
})

const category = categoryMap.get(categorySlug) || categorySlug

// Filter posts for this category
const posts: PostEntry[] = allPosts
  .filter((post: PostEntry) => post.data.category === category)
  .sort((a: PostEntry, b: PostEntry) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf())

const breadcrumbs = [
  { label: 'Archive', href: '/archive' },
  { label: 'Categories', href: '/archive#categories' }
]
---

<BaseLayout
  title={`${category} - Archive`}
  description={`${posts.length} posts in the ${category} category. Explore topics in ${category.toLowerCase()}.`}
>
  <div class="container max-w-4xl mx-auto px-4 py-8">
    <Breadcrumbs items={breadcrumbs} currentPage={category} />

    <!-- Header -->
    <div class="mb-12">
      <div class="flex items-center gap-3 mb-4">
        <h1 class="text-3xl md:text-4xl font-bold tracking-tight">{category}</h1>
        <Badge variant="secondary">{posts.length} post{posts.length !== 1 ? 's' : ''}</Badge>
      </div>
      <p class="text-lg text-muted-foreground">
        All posts in the {category} category
      </p>
    </div>

    <!-- Posts -->
    {posts.length > 0 ? (
      <div class="space-y-6">
        {posts.map((post: PostEntry) => (
          <Card class="hover:shadow-lg transition-shadow">
            <CardContent class="p-6">
              <div class="space-y-3">
                <!-- Date and Category -->
                <div class="flex items-center gap-3 text-sm text-muted-foreground">
                  <time datetime={post.data.publishDate.toISOString()}>
                    {formatDate(post.data.publishDate)}
                  </time>
                  <span>•</span>
                  <Badge variant="category">{post.data.category}</Badge>
                </div>

                <!-- Title -->
                <h2 class="text-xl md:text-2xl font-semibold">
                  <a 
                    href={`/journal/${post.slug}`}
                    class="hover:text-primary transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h2>

                <!-- Description -->
                <p class="text-muted-foreground leading-relaxed">
                  {post.data.description}
                </p>

                <!-- Tags -->
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2 pt-2">
                    {post.data.tags.map((tag: string) => (
                      <Badge variant="outline" class="text-xs">
                        <a href={`/archive/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}>
                          {tag}
                        </a>
                      </Badge>
                    ))}
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-lg text-muted-foreground mb-4">No posts found in this category.</p>
        <p class="text-sm text-muted-foreground">
          <a href="/archive" class="text-primary hover:underline">Browse all categories</a>
        </p>
      </div>
    )}

    <!-- Back to Archive -->
    <div class="mt-12 text-center">
      <a 
        href="/archive" 
        class="inline-flex items-center px-4 py-2 bg-secondary hover:bg-secondary/80 text-secondary-foreground rounded-md transition-colors font-medium"
      >
        ← Back to Archive
      </a>
    </div>
  </div>
</BaseLayout>
