---
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Card from '@/components/ui/Card.astro'
import CardContent from '@/components/ui/CardContent.astro'
import Badge from '@/components/ui/Badge.astro'
import { formatDate } from '@/lib/utils'

export async function getStaticPaths() {
  const posts = await getCollection('blog')
  const publishedPosts = posts.filter(post => !post.data.draft)
  
  // Get unique year-month combinations
  const yearMonthSet = new Set<string>()
  publishedPosts.forEach(post => {
    const date = new Date(post.data.publishDate)
    const year = date.getFullYear()
    const month = (date.getMonth() + 1).toString().padStart(2, '0')
    yearMonthSet.add(`${year}-${month}`)
  })
  
  return Array.from(yearMonthSet).map((yearMonth: string) => {
    const [year, month] = yearMonth.split('-') as [string, string]
    return {
      params: { 
        year: year,
        month: month
      },
      props: { 
        year: parseInt(year, 10),
        month: parseInt(month, 10),
        posts: publishedPosts
      }
    }
  })
}

interface Props {
  year: number
  month: number
  posts: CollectionEntry<'blog'>[]
}

const { year, month, posts } = Astro.props

// Filter posts for this year and month
const monthPosts = posts.filter(post => {
  const date = new Date(post.data.publishDate)
  return date.getFullYear() === year && (date.getMonth() + 1) === month
}).sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf())

const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 
                   'July', 'August', 'September', 'October', 'November', 'December']

const monthName = monthNames[month - 1]

const breadcrumbs = [
  { label: 'Journal', href: '/journal' },
  { label: 'Archive', href: '/archive' },
  { label: year.toString(), href: `/journal/${year}` }
]
---

<BaseLayout
  title={`${monthName} ${year}`}
  description={`${monthPosts.length} posts published in ${monthName} ${year}`}
>
  <div class="container max-w-4xl mx-auto px-4 py-8">
    <Breadcrumbs items={breadcrumbs} currentPage={`${monthName} ${year}`} />

    <!-- Header -->
    <div class="mb-12">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight mb-4">
        {monthName} {year}
      </h1>
      <p class="text-lg text-muted-foreground">
        {monthPosts.length} post{monthPosts.length !== 1 ? 's' : ''} published in {monthName} {year}
      </p>
    </div>

    {monthPosts.length > 0 ? (
      <div class="space-y-6">
        {monthPosts.map(post => (
          <Card class="hover:shadow-lg transition-shadow">
            <CardContent class="p-6">
              <div class="space-y-3">
                <!-- Date and Category -->
                <div class="flex items-center gap-3 text-sm text-muted-foreground">
                  <time datetime={post.data.publishDate.toISOString()}>
                    {formatDate(post.data.publishDate)}
                  </time>
                  <span>•</span>
                  <a href={`/archive/categories/${post.data.category.toLowerCase().replace(/\s+/g, '-').replace(/&/g, 'and')}`}>
                    <Badge variant="category">{post.data.category}</Badge>
                  </a>
                </div>

                <!-- Title -->
                <h2 class="text-xl md:text-2xl font-semibold">
                  <a 
                    href={`/journal/${post.slug}`}
                    class="hover:text-primary transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h2>

                <!-- Description -->
                <p class="text-muted-foreground leading-relaxed">
                  {post.data.description}
                </p>

                <!-- Tags -->
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2 pt-2">
                    {post.data.tags.map(tag => (
                      <Badge variant="outline" class="text-xs">
                        <a href={`/archive/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}>
                          {tag}
                        </a>
                      </Badge>
                    ))}
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-lg text-muted-foreground mb-4">No posts found for {monthName} {year}.</p>
        <p class="text-sm text-muted-foreground">
          <a href={`/journal/${year}`} class="text-primary hover:underline mr-4">
            Browse {year}
          </a>
          <a href="/archive" class="text-primary hover:underline">
            Browse all archives
          </a>
        </p>
      </div>
    )}

    <!-- Navigation -->
    <div class="mt-12 pt-8 border-t">
      <div class="flex justify-between items-center">
        <a 
          href={`/journal/${year}`}
          class="text-sm text-primary hover:underline font-medium"
        >
          ← Back to {year}
        </a>
        <a 
          href="/archive"
          class="text-sm text-primary hover:underline font-medium"
        >
          All Archives
        </a>
      </div>
    </div>
  </div>
</BaseLayout>